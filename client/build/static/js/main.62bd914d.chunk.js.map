{"version":3,"sources":["utils/queries.js","utils/mutations.js","utils/auth.js","components/ProductList/index.js","pages/Home.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","components/WatchList/index.js","pages/Watchlist.js","App.js","index.js"],"names":["QUERY_ALL_PRODUCTS","gql","QUERY_USER","LOGIN","ADD_USER","ADD_TO_WATCHLIST","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","ProductList","useQuery","data","loading","console","log","products","useMutation","addToWatchlist","handleAddToWatchlist","error","productId","a","Auth","loggedIn","variables","className","map","product","src","image","alt","title","description","category","startBid","href","Button","onClick","_id","Home","Login","props","useState","email","password","formState","setFormState","login","handleFormSubmit","event","preventDefault","handleChange","target","name","value","onSubmit","htmlFor","placeholder","type","id","onChange","to","Signup","username","addUser","mutationResponse","Navbar","logout","WatchList","JSON","stringify","user","watchlist","WatchlistPage","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","Nav","exact","path","component","Watchlist","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAeaA,GAbiBC,YAAH,+MAaOA,YAAH,uJAiClBC,EAAaD,YAAH,qNC9CVE,EAAQF,YAAH,mMAWLG,EAAWH,YAAH,4RAmBRI,EAAmBJ,YAAH,4S,iCCOd,M,0FApCb,WACE,OAAOK,IAAOC,KAAKC,c,sBAGrB,WACE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WACE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GACJF,aAAaG,QAAQ,WAAYD,GAEjCE,OAAOC,SAASC,OAAO,O,oBAGzB,WACEN,aAAaO,WAAW,YACxBH,OAAOC,SAASC,OAAO,S,sBCuCZE,EAlEY,WACvB,MAAwBC,YAASxB,GAAjByB,GAAhB,EAAOC,QAAP,EAAgBD,MAChBE,QAAQC,IAAI,MAAMH,GAElB,IAAMI,GAAe,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMI,WAAY,GACnCF,QAAQC,IAAI,MAAMC,GAElB,MAAmCC,YAAYzB,GAA/C,mBAAO0B,EAAP,KAGMC,GAHN,KAAwBC,MAGE,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACzBR,QAAQC,IAAI,aAAcM,GACZE,EAAKC,WAAaD,EAAK5B,WAAa,KAFzB,0CAKhB,GALgB,gCASAuB,EAAe,CACpCO,UAAW,CAAEJ,eAVQ,kBASfT,KATe,kDAavBE,QAAQM,MAAR,MAbuB,0DAAH,uDAkB1B,OAEI,sBAAKM,UAAU,gBAAf,UACI,oBAAIA,UAAU,mBAAd,+BACA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,8EAAf,UAGKV,EAASW,KAAI,SAAAC,GAAO,OACjB,sBAAKF,UAAU,4BAAf,UACI,qBAAKG,IAAG,kBAAaD,EAAQE,OAASJ,UAAU,eAAeK,IAAI,YACnE,sBAAKL,UAAU,yCAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BE,EAAQI,QACpC,oBAAGN,UAAU,qBAAb,UAAmCE,EAAQK,YAA3C,OACA,oBAAGP,UAAU,YAAb,wBAAqCE,EAAQM,YAC7C,oBAAGR,UAAU,YAAb,4BAAyCE,EAAQO,YACjD,mBAAGC,KAAK,WAAWV,UAAU,uCAA7B,0BACCH,EAAKC,YACF,cAACa,EAAA,EAAD,CACIX,UAAU,uCACVY,QAAS,kBAAMnB,EAAqBS,EAAQW,MAFhD,mCAToCX,EAAQW,QAJhE,iBC5BTC,EAVF,WACX,OACE,qBAAKd,UAAU,YAAf,SACE,cAAC,EAAD,O,QCmESe,MArEf,SAAeC,GACb,MAAkCC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2B9B,YAAY3B,GAAvC,mBAAO0D,EAAP,KAAgB5B,EAAhB,KAAgBA,MAEV6B,EAAgB,uCAAG,WAAOC,GAAP,iBAAA5B,EAAA,6DACvB4B,EAAMC,iBADiB,kBAGEH,EAAM,CAC3BvB,UAAW,CAAEmB,MAAOE,EAAUF,MAAOC,SAAUC,EAAUD,YAJtC,gBAGbjC,EAHa,EAGbA,KAIRW,EAAKyB,MAAMpC,EAAKoC,MAAMpD,OAPD,gDASrBkB,QAAQC,IAAR,MATqB,yDAAH,sDAahBqC,EAAe,SAACF,GACpB,MAAwBA,EAAMG,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdR,EAAa,2BACRD,GADO,kBAETQ,EAAOC,MAIZ,OACE,qBAAK7B,UAAU,iBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uCACA,uFACA,uBAAM8B,SAAUP,EAAhB,UACE,sBAAKvB,UAAU,8BAAf,UACE,uBAAO+B,QAAQ,QAAf,kCACA,uBACEC,YAAY,qBACZJ,KAAK,QACLK,KAAK,QACLC,GAAG,QACHC,SAAUT,OAId,sBAAK1B,UAAU,8BAAf,UACE,uBAAO+B,QAAQ,MAAf,8BACA,uBACEC,YAAY,SACZJ,KAAK,WACLK,KAAK,WACLC,GAAG,MACHC,SAAUT,OAGd,8BACE,cAAC,IAAD,CAAMU,GAAG,SAASpC,UAAU,MAA5B,oCAEDN,EACC,8BACE,mBAAGM,UAAU,aAAb,sDAEA,KACJ,qBAAKA,UAAU,wBAAf,SACE,wBAAQiC,KAAK,SAASjC,UAAU,uCAAhC,+BCaGqC,MA1Ef,SAAgBrB,GACd,MAAkCC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,GAAImB,SAAU,KAAhF,mBAAOlB,EAAP,KAAkBC,EAAlB,KACA,EAAkB9B,YAAY1B,GAAvB0E,EAAP,oBAEMhB,EAAgB,uCAAG,WAAOC,GAAP,iBAAA5B,EAAA,6DACvB4B,EAAMC,iBADiB,SAEQc,EAAQ,CACrCxC,UAAW,CACTmB,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpBmB,SAAUlB,EAAUkB,YAND,OAEjBE,EAFiB,OASjBtE,EAAQsE,EAAiBtD,KAAKqD,QAAQrE,MAC5C2B,EAAKyB,MAAMpD,GAVY,2CAAH,sDAahBwD,EAAe,SAACF,GACpB,MAAwBA,EAAMG,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdR,EAAa,2BACRD,GADO,kBAETQ,EAAOC,MAIZ,OACE,qBAAK7B,UAAU,iBAAf,SACE,sBAAKA,UAAU,mBAAf,UAEE,wCACA,4FACA,uBAAM8B,SAAUP,EAAhB,UACE,sBAAKvB,UAAU,8BAAf,UACE,uBAAO+B,QAAQ,OAAf,2BACA,uBACEC,YAAY,SACZJ,KAAK,WACLK,KAAK,WACLC,GAAG,WACHC,SAAUT,OAGd,sBAAK1B,UAAU,8BAAf,UACE,uBAAO+B,QAAQ,QAAf,wBACA,uBACEC,YAAY,mBACZJ,KAAK,QACLK,KAAK,QACLC,GAAG,QACHC,SAAUT,OAGd,sBAAK1B,UAAU,8BAAf,UACE,uBAAO+B,QAAQ,MAAf,4BACA,uBACEC,YAAY,SACZJ,KAAK,WACLK,KAAK,WACLC,GAAG,MACHC,SAAUT,OAId,cAAC,IAAD,CAAMU,GAAG,QAAT,kDAEA,qBAAKpC,UAAU,oBAAf,SACE,wBAAQiC,KAAK,SAASjC,UAAU,uCAAhC,+BCXGyC,EAzDA,WAiDP,OACA,sBAAKzC,UAAU,wDAAf,UACA,eAAC,IAAD,CAAMoC,GAAG,IAAIpC,UAAU,oBAAoBkC,GAAG,gBAA9C,gBAAiE,yCAjD7DrC,EAAKC,WAEL,gCACI,wBAAQE,UAAU,iBAAiBiC,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAtL,SACI,sBAAMjC,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BkC,GAAG,yBAA7C,SACI,qBAAIlC,UAAU,0BAAd,UACA,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMoC,GAAG,aAAapC,UAAU,mBAAhC,yBAIJ,oBAAIA,UAAU,kBAAd,SAEI,mBAAGU,KAAK,IAAIV,UAAU,mBAAmBY,QAAS,kBAAMf,EAAK6C,UAA7D,8BAUZ,gCACK,wBAAQ1C,UAAU,iBAAiBiC,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAtL,SACG,sBAAMjC,UAAU,0BAEhB,qBAAKA,UAAU,2BAA2BkC,GAAG,yBAA7C,SACI,qBAAIlC,UAAU,0BAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMoC,GAAG,UAAUpC,UAAU,mBAA7B,sBAIJ,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMoC,GAAG,SAASpC,UAAU,mBAA5B,iCCHjB2C,EApCU,WACrB,MAA+B1D,YAAStB,GAAxBuB,GAAhB,EAAOC,QAAP,EAAgBD,MAAMQ,EAAtB,EAAsBA,MACtBN,QAAQC,IAAI,SAASH,GACrBE,QAAQC,IAAIuD,KAAKC,UAAUnD,EAAM,KAAK,IACtC,IAAMJ,GAAe,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAM4D,KAAKC,YAAa,GAEzC,OADA3D,QAAQC,IAAI,MAAMC,GAGd,sBAAKU,UAAU,gBAAf,UACI,oBAAIA,UAAU,mBAAd,kCACA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,8EAAf,UACKV,EAASW,KAAI,SAAAC,GAAO,OACjB,sBAAKF,UAAU,4BAAf,UACI,qBAAKG,IAAG,kBAAaD,EAAQE,OAASJ,UAAU,eAAeK,IAAI,YACnE,sBAAKL,UAAU,yCAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BE,EAAQI,QACpC,oBAAGN,UAAU,qBAAb,UAAmCE,EAAQK,YAA3C,OACA,oBAAGP,UAAU,YAAb,wBAAqCE,EAAQM,YAC7C,oBAAGR,UAAU,YAAb,4BAAyCE,EAAQO,YACjD,mBAAGC,KAAK,OAAOV,UAAU,uCAAzB,iBACA,mBAAGU,KAAK,IAAIV,UAAU,uCAAtB,6BACA,mBAAGU,KAAK,UAAUV,UAAU,uCAA5B,wCATwCE,EAAQW,QAFhE,iBCNTmC,EARO,WACpB,OACE,qBAAKhD,UAAU,YAAf,SACE,cAAC,EAAD,OCWAiD,EAAWC,YAAe,CAC9BC,IAAK,aAGDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BrF,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACL8E,QAAQ,2BACHA,GADE,IAELC,cAAetF,EAAK,iBAAaA,GAAU,SAK3CuF,EAAS,IAAIC,IAAa,CAC9BC,KAAMP,EAASQ,OAAOX,GACtBY,MAAO,IAAIC,MAqBEC,MAlBf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,gCACE,cAACQ,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC,cAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,SAASC,UAAWrD,IACtC,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,UAAUC,UAAW/B,IACvC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,aAAaC,UAAWC,eCxCtDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.62bd914d.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: String) {\n    products(category: $category) {\n      _id\n      title\n      description\n      starBid\n      image\n      category \n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n    {\n    products{\n      _id\n      title\n      description\n      image\n      startBid\n      category\n    }\n  }\n`;\n\n//Working\n// export const QUERY_CATEGORY = gql`\n//   {\n//     query categories ($category:String) {\n//       categories(category:$category) {\n//         _id\n//         title\n//         description\n//         startBid\n//         category \n//         image\n//       }\n         \n//     }\n    \n    \n//   }\n// `;\n\n// Working\nexport const QUERY_USER = gql`\n  {\n    user {\n      _id\n      username\n      watchlist{\n        _id\n        title\n        description\n        startBid\n        category \n        image\n      } \n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $username: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_TO_WATCHLIST = gql`\n  mutation addToWatchlist($productId: ID!) {\n    addToWatchlist(productId: $productId) {\n      _id\n      username\n      email\n      watchlist {\n        _id\n        title\n        description\n        startBid\n        category \n        image\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ALL_PRODUCTS} from '../../utils/queries';\nimport { ADD_TO_WATCHLIST } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport { Button } from 'react-bootstrap';\n  \n\nexport const ProductList = () => {\n    const {loading, data} = useQuery(QUERY_ALL_PRODUCTS);\n    console.log(\"***\",data)\n    // console.log(JSON.stringify(error,null,2))\n    const products = data?.products || []; \n    console.log(\"---\",products);\n\n    const [addToWatchlist, {error }] = useMutation(ADD_TO_WATCHLIST);\n    \n\n    const handleAddToWatchlist = async (productId) => {\n        console.log(\"product id\", productId);\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n    \n        if (!token) {\n          return false;\n        }\n    \n        try {\n          const { data } = await addToWatchlist({\n            variables: { productId }\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      };\n    \n\n    return (\n      \n        <div className=\"container p-3\">\n            <h1 className='text-center pt-5'>View our Gallery:</h1>\n            <div className='card_wrap--outer'>\n                <div className='card__wrap--inner'>\n                    <div className=\"card-group\">\n                        <div className='row row-col-2 justify-content-center border-lg-dark py-2 align-items-center'>\n\n\n                            {products.map(product => (\n                                <div className=\"card col-3 m-3 shadow p-3\" key={product._id}>\n                                    <img src={`/images/${product.image}`} className=\"card-img-top\" alt=\"Artwork\"/>\n                                    <div className=\"card-body card text-center border-dark\">\n                                        <h5 className=\"card-title\">{product.title}</h5>\n                                        <p className=\"flexible card-text\">{product.description} </p>\n                                        <p className=\"card-text\"> Category: {product.category}</p>\n                                        <p className=\"card-text\"> Starting Bid: {product.startBid}</p>\n                                        <a href=\"/Product\" className=\"btn btn-outline-dark m-2 buttonStyle\">View Product</a>\n                                        {Auth.loggedIn() && ( \n                                            <Button \n                                                className=\"btn btn-outline-dark m-2 buttonStyle\" \n                                                onClick={() => handleAddToWatchlist(product._id)}\n                                            >Add to Watchlist</Button>\n                                        )}\n                                    </div>\n                                </div>\n                            ))};\n                        </div>\n                    </div>\n                </div>   \n            </div>\n        </div>\n\n\n    );\n}\n\nexport default ProductList;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\n// import CategoryMenu from \"../components/CategoryMenu\";\n// import Watchlist from \"../components/Watchlist\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <ProductList/>\n      {/* <CategoryMenu /> */}\n      {/* <Watchlist /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      // const token = mutationResponse.data.login.token;\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container pt-5\">\n      <div className=\"pt-5 text-center\">\n        <h2>Login</h2>\n        <p>Please login to see your watchlist and bid on new art!</p>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email address: &nbsp; </label>\n            <input\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password: &nbsp;  </label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <Link to=\"Signup\" className='p-4'>Create a new account</Link></div>\n\n          {error ? (\n            <div>\n              <p className=\"error-text\">The provided credentials are incorrect</p>\n            </div>\n          ) : null}\n          <div className=\"flex-row flex-end p-2\">\n            <button type=\"submit\" className=\"btn btn-outline-dark m-2 buttonStyle\">Submit</button>\n          </div>\n        </form>\n        </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '', username: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        username: formState.username,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container pt-5\">\n      <div className=\"pt-5 text-center\">\n\n        <h2>Signup</h2>\n        <p>Don't have an account? No problem. Create an account below!</p>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"name\">Username:&nbsp;</label>\n            <input\n              placeholder=\"artRox\"\n              name=\"username\"\n              type=\"username\"\n              id=\"username\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email:&nbsp;</label>\n            <input\n              placeholder=\"artrox@email.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password:&nbsp; </label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n\n          <Link to=\"Login\">Already have an account? Login Here.</Link>\n\n          <div className=\"flex-row flex-end\">\n            <button type=\"submit\" className=\"btn btn-outline-dark m-2 buttonStyle\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n          return (\n            <div>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ms-auto mx-5\">\n                    <li className=\"nav-item active\">\n                        <Link to=\"/Watchlist\" className=\"nav-link sr-only\">\n                        Watchlist\n                        </Link>\n                    </li>\n                    <li className=\"nav-item active\">\n                        {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n                        <a href=\"/\" className=\"nav-link sr-only\" onClick={() => Auth.logout()}>\n                        Logout\n                        </a>\n                    </li>\n                    </ul>\n                </div>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n                 <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav ms-auto mx-5\">\n                            <li className=\"nav-item active\">\n                                <Link to=\"/Signup\" className=\"nav-link sr-only\">\n                                Signup\n                                </Link>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <Link to=\"/Login\" className=\"nav-link sr-only\">\n                                Login\n                                </Link>\n                            </li>\n                        </ul>\n                </div>\n            </div>\n          );\n        };\n    };\n        return (\n        <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\n        <Link to=\"/\" className=\"navbar-brand mx-5\" id=\"artWatchStyle\">art<a>Watch</a></Link>\n        {showNavigation()}\n        </nav>\n      )\n};\n\nexport default Navbar;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../../utils/queries';\n\nexport const WatchList = () => {\n    const {loading, data, error} = useQuery(QUERY_USER);\n    console.log(\"--data\",data)\n    console.log(JSON.stringify(error,null,2))\n    const products = data?.user.watchlist || []; \n    console.log(\"---\",products);\n    return (\n      \n        <div className=\"container p-3\">\n            <h1 className='text-center pt-5'>View Your Watchlist:</h1>\n            <div className='card_wrap--outer'>\n                <div className='card__wrap--inner'>\n                    <div className=\"card-group\">\n                        <div className='row row-col-2 justify-content-center border-lg-dark py-2 align-items-center'>\n                            {products.map(product => (\n                                <div className=\"card col-3 m-3 shadow p-3\" key={product._id}>\n                                    <img src={`/images/${product.image}`} className=\"card-img-top\" alt=\"Artwork\"/>\n                                    <div className=\"card-body card text-center border-dark\">\n                                        <h5 className=\"card-title\">{product.title}</h5>\n                                        <p className=\"flexible card-text\">{product.description} </p>\n                                        <p className=\"card-text\"> Category: {product.category}</p>\n                                        <p className=\"card-text\"> Starting Bid: {product.startBid}</p>\n                                        <a href=\"/Bid\" className=\"btn btn-outline-dark m-2 buttonStyle\">Bid</a>\n                                        <a href=\"/\" className=\"btn btn-outline-dark m-2 buttonStyle\">Back to Gallery</a>\n                                        <a href=\"/Remove\" className=\"btn btn-outline-dark m-2 buttonStyle\">Remove from Watchlist</a>\n                                    </div>\n                                </div>\n                            ))};\n                        </div>\n                    </div>\n                </div>   \n            </div>\n        </div>\n    )\n}\n\nexport default WatchList;","import React from \"react\";\nimport Watchlist from \"../components/WatchList\";\n\nconst WatchlistPage = () => {\n  return (\n    <div className=\"container\">\n      <Watchlist/>\n    </div>\n  );\n};\n\nexport default WatchlistPage;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Watchlist from \"./pages/Watchlist\";\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/Watchlist\" component={Watchlist} /> \n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}